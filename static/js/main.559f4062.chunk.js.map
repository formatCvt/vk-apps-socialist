{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","useState","fetchedEmail","setEmail","fetchedPhone","setPhone","emailFetched","setEmailFetched","phoneFetched","setPhoneFetched","useEffect","a","getEmailResult","connect","sendPromise","email","getPhoneNumberResult","phone_number","fetchData","left","IOS","className","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.559f4062.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport connect from '@vkontakte/vk-connect';\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => {\n\tconst [fetchedEmail, setEmail] = useState(null);\n\tconst [fetchedPhone, setPhone] = useState(null);\n\tconst [emailFetched, setEmailFetched] = useState(false);\n\tconst [phoneFetched, setPhoneFetched] = useState(false);\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tlet getEmailResult = null;\n\t\t\ttry {\n\t\t\t\tgetEmailResult = await connect.sendPromise('VKWebAppGetEmail');\n\t\t\t\tsetEmailFetched(true);\n\t\t\t} catch (e) {\n\t\t\t\t//getEmailResult = 'запретил'\n\t\t\t}\n\t\t\tsetEmail(getEmailResult ? getEmailResult.email : 'Не удалось получить');\n\n\t\t\tlet getPhoneNumberResult = null;\n\t\t\ttry {\n\t\t\t\tgetPhoneNumberResult = await connect.sendPromise('VKWebAppGetPhoneNumber');\n\t\t\t\tsetPhoneFetched(true);\n\t\t\t} catch (e) {\n\t\t\t\t//getEmailResult = 'запретил'\n\t\t\t}\n\t\t\tsetPhone(getPhoneNumberResult ? getPhoneNumberResult.phone_number : 'Не удалось получить');\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<Panel id={props.id}>\n\t\t\t<PanelHeader\n\t\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t</HeaderButton>}\n\t\t\t>\n\t\t\t\tPersik\n\t\t\t</PanelHeader>\n\t\t\t<Group title=\"e-mail\"><Div>{fetchedEmail == null ? <PanelSpinner /> : fetchedEmail}</Div></Group>\n\t\t\t<Group title=\"phone\"><Div>{fetchedPhone == null ? <PanelSpinner /> : fetchedPhone}</Div></Group>\n\t\t\t<Div>{emailFetched && phoneFetched ? <img className=\"Persik\" src={persik} alt=\"Persik The Cat\" /> : 'Что бы увидеть персика разрешите доступ к телефону и почте'}</Div>\n\t\t</Panel>\n\t);\n}\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}